= simple_form_for(@form.persisted? ? [:convention_setup, @form] : [:convention_setup, @category, @form] ) do |f|
  = render partial: "shared/error_messages", object: @form
  = f.input :name
  = f.input :cost

  - if @form.persisted?
    = f.input :category_id, collection: Category.all, label_method: :name, include_blank: false

  %fieldset
    %h3= EventCategory.model_name.human(count: 2)
    = f.simple_fields_for :event_categories do |ec|
      - label_text = "#{EventCategory.model_name.human} #{EventCategory.human_attribute_name(:name)}"
      = ec.input :name, label: label_text, hint: t(".event_category_hint")

  = f.input :best_time_format, collection: Event::BEST_TIME_FORMATS, include_blank: false
  = f.input :accepts_music_uploads

  - if EventConfiguration.singleton.registrants_should_specify_default_wheel_size?
    = f.input :accepts_wheel_size_override
  - else
    = f.input :accepts_wheel_size_override, disabled: true
    %small
      %b= t(".wheel_size_override_only_when_default_wheel_size")

  %div
    %a{ href: "#", class: "js--toggle", data: { toggle_target: "#advanced_settings" } }= t(".advanced_settings")
    #advanced_settings.is--hidden

      = f.input :visible
      = f.input :artistic
      .field
        .input_details= t(".artistic_closed_date", artistic_closed_date: EventConfiguration.singleton.effective_artistic_closed_date.presence || "Undefined")
      = f.input :standard_skill
  %br
  = f.button :submit
