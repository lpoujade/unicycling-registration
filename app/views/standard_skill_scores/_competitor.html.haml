- if !competitor.new_record?
  %tr
    %td= competitor.position
    %td= competitor.bib_number
    %td= competitor.name
    %td
      - routine = competitor.standard_skill_routine
      - if routine.nil?
        No Routine Entered
      - else
        = competitor.standard_skill_routine.try!(:total_skill_points)
    %td
      - score = competitor.standard_skill_scores.where(judge: @judge).first
      - if score.present?
        = link_to 'Update score', edit_judge_competitor_standard_skill_score_path(@judge, competitor, score), class: "button"
      - else
        = link_to 'Enter score', new_judge_competitor_standard_skill_score_path(@judge, competitor), class: "button"
    %td
      - if routine.nil?
        No Routine Entered
      - else
        = link_to "competitor pdf", standard_skill_routine_path(competitor.standard_skill_routine, format: :pdf), class: "button small"
        = link_to "writing judge pdf", writing_judge_standard_skill_routine_path(competitor.standard_skill_routine, format: :pdf), class: "button small"
        = link_to "difficulty judge pdf", difficulty_judge_standard_skill_routine_path(competitor.standard_skill_routine, format: :pdf), class: "button small"
        - if score.present? && policy(score).destroy?
          = link_to "Delete Scores", judge_competitor_standard_skill_score_path(@judge, competitor, score), method: :delete, data: { confirm: "Remove the Judged scores for this competitor?" }, class: "button alert small"
