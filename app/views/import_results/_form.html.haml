= simple_form_for(@import_result.new_record? ? [@user, @competition, @import_result] : [@import_result], |
  {:remote => true, :html => {:class => "data_entry"}}) do |f|                                    |
  = render partial: "/shared/error_messages", object: @import_result
  = f.hidden_field :is_start_time

  %table.import_results
    - cache ['header', @competition] do
      = render "imported_time_result_thead"
    %tbody
      = render partial: 'imported_time_result', collection: @import_results, as: :import_result


    %tfoot
      %tr
        %td{ colspan: 2}= registrant_bib_number_select_box(f, @competition, class: "js--autoFocus")
        %td
        - if @competition.data_entry_format.hours?
          %td= f.number_field :facade_hours, {:min => 0}
          %td= f.number_field :facade_minutes, {:min => 0}
        - else
          %td= f.number_field :minutes, {:min => 0}
        %td= f.number_field :seconds, {:min => 0}
        - if @competition.data_entry_format.thousands?
          %td= f.number_field :thousands, {:min => 0}
        - if @competition.data_entry_format.hundreds?
          %td= f.number_field :facade_hundreds, {:min => 0}
        - if @competition.has_penalty?
          %td= f.number_field :number_of_penalties
        - if @competition.has_num_laps?
          %td= f.number_field :number_of_laps
        %td= f.select :status, TimeResult.status_values, include_blank: true
        %td{ colspan: "2"}= f.button :submit, "Submit", :class => "multiclick"

#notice
