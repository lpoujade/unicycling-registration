%table.import_results.sortable
  - cache [@competition, display_username] do
    %thead
      %tr
        - if display_username
          %th Username
        %th Entry Number
        %th ID
        %th Name
        %th Competitor Exists?
        - if @competition.imports_times?
          %th Time
        - else
          %th Points
        - if @competition.has_num_laps?
          %th # Laps
        %th Disqualified
        %th Entered At
  %tbody
    - @import_results.each_with_index do |result, index|
      - cache [result, Registrant, @competition, display_username] do
        %tr
          - if display_username
            %td= result.user
          %td= index + 1
          %td= result.bib_number
          = render partial: "matching_registrant_cell", locals: { import_result: result }
          - if @competition.imports_times?
            %td= result.full_time
          - else
            %td= result.points
          - if @competition.has_num_laps?
            %Td= result.number_of_laps
          %td= result.disqualified? ? "yes" : ""
          %td= result.created_at.to_formatted_s(:short)

%hr
- imported_bib_numbers = @import_results.map(&:bib_number)
= render "results/shared/competitors_without_results", competition: @competition, bib_numbers_with_results: imported_bib_numbers
