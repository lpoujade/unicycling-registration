%table.import_results
  %thead
    %tr
      - if display_username
        %th Username
      %th Entry Number
      %th ID
      %th Name
      - if @competition.imports_times
        %th Time
      - else
        %th Points
      %th Disqualified
      %th Competitor Exists?
  %tbody
    - @import_results.each_with_index do |result, index|
      %tr
        - if display_username
          %td= result.user
        %td= index + 1
        %td= result.bib_number
        %td= Registrant.find_by_bib_number(result.bib_number)
        - if @competition.imports_times
          %td= result.full_time
        - else
          %td= result.rank
        %td= result.disqualified
        - competitor = result.competition.find_competitor_with_bib_number(result.bib_number)
        - if competitor
          %td.competitor_exists= competitor.to_s
        - else
          %td.competitor_not_exists No


%hr
- imported_bib_numbers = @import_results.map(&:bib_number)
- @competitors_without_results = @competition.competitors.select{|competitor| !imported_bib_numbers.include?(competitor.lowest_member_bib_number) }
%table.sortable
  %caption Competitors without Results
  %thead
    %tr
      %th ID
      %th Name
      %th Status
  %tbody
    - @competitors_without_results.each do |competitor|
      %tr
        %td= competitor.bib_number
        %td= competitor
        %td= competitor.status
%hr
