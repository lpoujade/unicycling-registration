#!/bin/sh
#
### BEGIN INIT INFO
# Provides: reg
# Required-Start: $network $remote_fs $syslog $local_fs
# Required-Stop: $network $remote_fs $syslog $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: starts nucore by eye
### END INIT INFO

RUNAS="ec2-user"
USER_HOME="/home/ec2-user"
ROOT_PATH="$USER_HOME/unicycling-registration/current"
CONFIG_PATH="$ROOT_PATH/config"
SERVICE_NAME="all"
PID_FILE="$USER_HOME/.eye/pid"

# Find eye-patch config file.
config_file() {
  if [ -f "$CONFIG_PATH/eye.yml" ]; then
    CONFIG_FILE="$CONFIG_PATH/eye.yml"
  elif [ -f "$CONFIG_PATH/eye.yml.erb" ]; then
    CONFIG_FILE="$CONFIG_PATH/eye.yml.erb"
  else
    echo "No eye-patch config file for $RUNAS"
    exit 0
  fi
}

# Find eye-patch bin file.
eye_bin() {
  if [ -f "$ROOT_PATH/bin/eye-patch" ]; then
    EYE="$ROOT_PATH/bin/eye-patch"
  elif $(su -l $RUNAS -c "cd $ROOT_PATH && bundle check &>/dev/null && bundle list | grep -q eye-patch"); then
    EYE="cd $ROOT_PATH && bundle exec eye-patch"
  else
    echo "Cannot find eye-patch bin for $RUNAS"
    exit 0
  fi
}

# Check if eye is running.
running() {
  DEFAULT=$1
  if [ -f "$PID_FILE" ]; then
    if kill -0 $(cat $PID_FILE); then
      if [[ $DEFAULT == false ]]; then
        echo "Eye is running for $RUNAS"
        exit 0
      fi
      return 0
    fi
  fi
  if [[ $DEFAULT == true ]]; then
    echo "Eye is not running for $RUNAS"
    exit 0
  fi
  return 1
}

# Excute eye-patch command as correct user.
execute() {
  eye_bin
  CMD="$EYE $@"
  if [ "$USER" = "$RUNAS" ]; then
    $CMD
  else
    su -l $RUNAS -c "$CMD"
  fi
}

# Start eye
start_eye() {
  echo "Loading eye configuration for $RUNAS"
  config_file
  execute load $CONFIG_FILE
  execute start $SERVICE_NAME
}

# Stop eye
stop_eye() {
  echo "Stopping eye for $RUNAS"
  execute stop $SERVICE_NAME
  execute quit
}

case "$1" in
  start)
    running false
    start_eye
    ;;
  stop)
    running true
    stop_eye
    ;;
  restart)
    if running; then
      execute restart $SERVICE_NAME
    else
      start_eye
    fi
    ;;
  reload)
    running true
    config_file
    execute load $CONFIG_FILE
    ;;
  rotate)
    running true
    kill -USR1 $(cat $PID_FILE)
    execute user_command rotate $SERVICE_NAME
    ;;
  status)
    running true
    execute info $SERVICE_NAME
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload|rotate|status}"
    echo "start - Load config and start eye"
    echo "stop - Stop eye"
    echo "restart - Restart eye or start eye"
    echo "reload - Reload config"
    echo "rotate - Run rotate user_command"
    echo "status - Return eye info"
    exit 1
    ;;
esac
