== Welcome to the Unicycling Registration Application.

== Set the configuration variables (for local work)
echo "RACK_ENV=development" > .env
echo "PORT=9292" >> .env

echo "MAIL_SERVER=smtp.gmail.com" >> .env
echo "MAIL_PORT=587" >> .env
echo "MAIL_DOMAIN=dunlopweb.com" >> .env
echo "MAIL_USERNAME=robin@dunlopweb.com" >> .env
echo "MAIL_PASSWORD=something" >> .env
echo "MAIL_FULL_EMAIL=robin@dunlopweb.com" >> .env
echo "DOMAIN=localhost:9292" >> .env


== Set up the configuration variables (on heroku)
heroku config:add MAIL_SERVER=smtp.gmail.com
heroku config:add MAIL_PORT=587
heroku config:add MAIL_DOMAIN=dunlopweb.com
heroku config:add MAIL_USERNAME=robin@dunlopweb.com
heroku config:add MAIL_PASSWORD=something
heroku config:add MAIL_FULL_EMAIL=robin@dunlopweb.com
heroku config:add DOMAIN=uniregtest.herokuapp.com

== On Non-GMail systems, you may need to set the MAIL_TLS=false variable too (see initializers/mailer.rb)

Current values for Unicycling.org rulebook are:
MAIL_SERVER=unicycling.org
MAIL_PORT=25
MAIL_DOMAIN=unicycling.org
MAIL_USERNAME=rulebook@unicycling.org
MAIL_PASSWORD=********
MAIL_FULL_EMAIL=rulebook@unicycling.org
MAIL_TLS=false
DOMAIN=rulebook.unicycling.org

== Deploying to Heroku

1. Create a new heroku instance
        <tt>heroku create cedar,.....something</tt>

2. Upload the code
        <tt>git push heroku master</tt>

3. Install the pgbackups addon (so that you can take backups/dumps)
        <tt> heroku addons:add pgbackups</tt>


== Backup data from the heroku instance

1. Create a snapshot (assuming that the heroku app is named uniregtest)
        <tt>heroku pgbackups:capture --expire --app uniregtest</tt>

2. Download the backup
        <tt>curl -o latest.dump `heroku pgbackups:url --app uniregtest`</tt>

3. Import the data (from inside your VM)
        <tt>PGPASSWORD=password pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d app_development latest.dump</tt>
